% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ellmer_helpers.R
\name{chat_with_memory_one_shot}
\alias{chat_with_memory_one_shot}
\title{Send a single turn to Bedrock via \strong{ellmer} with contextR memory}
\usage{
chat_with_memory_one_shot(
  buffer,
  user_msg,
  model = "anthropic.claude-3-5-sonnet-20240620-v1:0",
  followup = NULL,
  ...
)
}
\arguments{
\item{buffer}{A \code{MemoryBuffer} created by \code{\link[=memory_buffer]{memory_buffer()}}.}

\item{user_msg}{Character. The new user message for this turn.}

\item{model}{Character Bedrock model ID
(default Claude Sonnet 3.5; change as needed).}

\item{followup}{Character. Optional extra instruction appended after the
buffered context (e.g., "Answer in 2 sentences.").}

\item{...}{Additional arguments passed to \code{ellmer::chat_aws_bedrock()}
(e.g., \code{profile = "my-aws-profile"} or \code{api_args = list()})}
}
\value{
Character assistant reply.
}
\description{
This is a convenience wrapper for a \strong{one-shot} call:
it creates a temporary \code{ellmer::chat_aws_bedrock()} client,
sends the prompt that includes your buffer context,
captures the assistant reply, and stores it back in the buffer.
}
\examples{
\dontrun{
  buf <- memory_buffer()
  reply <- chat_with_memory_one_shot(buf,
           "Tell me about frogs in the USA?")
}
}
