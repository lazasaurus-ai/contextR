% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shiny_helpers.R
\name{reactive_memory_buffer}
\alias{reactive_memory_buffer}
\title{Reactive conversational memory buffer for \strong{Shiny}}
\usage{
reactive_memory_buffer(
  k = 10,
  system_prompt = NULL,
  metadata = list(),
  autosave = FALSE,
  save_dir = getwd(),
  save_file = "context_memory.rds"
)
}
\arguments{
\item{k, system_prompt, metadata, autosave, save_dir, save_file}{Same arguments as \code{\link[=memory_buffer]{memory_buffer()}}.}
}
\value{
A list with reactive helpers (see Details).
}
\description{
This helper wraps \code{\link[=memory_buffer]{memory_buffer()}} in a reactive container so that
any Shiny expression depending on the buffer is automatically
updated after you add or clear messages.
}
\details{
The returned object is \strong{a list with four members}:
\describe{
\item{\code{buffer()}}{a \emph{reactive} expression returning the live \code{MemoryBuffer}}
\item{\verb{add(role, content, …)}}{add any message (reactive‐aware wrapper for \code{\link[=add_message]{add_message()}})}
\item{\verb{add_user(content, …)}}{shortcut for adding a \code{"user"} message}
\item{\verb{add_assistant(content, …)}}{shortcut for adding an \code{"assistant"} message}
\item{\code{clear()}}{clear the buffer and trigger reactivity}
}
}
\section{Usage inside \emph{server}}{


\if{html}{\out{<div class="sourceCode r">}}\preformatted{rbuf <- reactive_memory_buffer(k = 6)

observeEvent(input$send, \{
  rbuf$add_user(input$msg)
  reply <- my_model(memory_prompt(rbuf$buffer(), input$msg, "ellmer"))
  rbuf$add_assistant(reply)
\})

output$history <- renderPrint(\{
  get_memory(rbuf$buffer())   # re-runs automatically
\})
}\if{html}{\out{</div>}}
}

