% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/memory_add_and_summarize.R
\name{memory_add_and_summarize}
\alias{memory_add_and_summarize}
\title{Add a turn and (conditionally) append a rolling summary}
\usage{
memory_add_and_summarize(
  buffer,
  role,
  content,
  client = NULL,
  n = getOption("contextR.summary_window", 5),
  system_prompt = getOption("contextR.summary_system",
    "You are a concise scribe. Summarize faithfully in <=120 words; include decisions, actions, open questions.")
)
}
\arguments{
\item{buffer}{A \code{MemoryBuffer} as returned by \code{\link[=memory_buffer]{memory_buffer()}}.}

\item{role}{One of \code{"user"} or \code{"assistant"}.}

\item{content}{Message text (non-character objects are coerced with \code{\link[=as_text]{as_text()}}).}

\item{client}{An LLM chat client function; must accept a list of messages
(each with \code{role} and \code{content}) and return a list with \code{content} or a
character string. If \code{NULL}, no summarization is attempted.}

\item{n}{Integer; number of raw turns per summary window. Default:
\code{getOption("contextR.summary_window", 5)}.}

\item{system_prompt}{Optional system prompt used for summarization. Default:
\code{getOption("contextR.summary_system", "You are a concise scribe. Summarize faithfully in <=120 words; include decisions, actions, open questions.")}}
}
\value{
The same \code{buffer}, mutated by reference and returned (invisibly).
}
\description{
Works with \code{MemoryBuffer} created by \code{\link[=memory_buffer]{memory_buffer()}}. After appending the
new turn via \code{\link[=add_message]{add_message()}}, this will summarize the next window of \code{n}
raw turns (user/assistant) \emph{after} the last summary and append that summary
as a \code{system} message with \code{name = "summary"}. Covered ranges are recorded
in the message \code{meta} to avoid duplicates.
}
